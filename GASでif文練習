function compareAndCopyRemarks() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheetA = ss.getSheetByName("A"); // Aシート
  var sheetB = ss.getSheetByName("B"); // Bシート
  
  var dataA = sheetA.getDataRange().getValues();
  var dataB = sheetB.getDataRange().getValues();
  
  var idColumnA = findColumnByName(dataA[0], "ID");
  var remarkColumnA = findColumnByName(dataA[0], "備考");
  var idColumnB = findColumnByName(dataB[0], "ID");
  var remarkColumnB = findColumnByName(dataB[0], "備考");
  
  if (idColumnA == -1 || remarkColumnA == -1 || idColumnB == -1 || remarkColumnB == -1) {
    Logger.log("必要な列が見つかりません。");
    return;
  }
  
  var updatedCount = 0; // 更新された行数をカウントする変数

  for (var i = 1; i < dataA.length; i++) {
    var idA = dataA[i][idColumnA];
    for (var j = 1; j < dataB.length; j++) {
      if (dataB[j][idColumnB] === idA) {
        var currentValue = dataA[i][remarkColumnA];
        var newValue = dataB[j][remarkColumnB];
        if (currentValue !== newValue) {
          sheetA.getRange(i + 1, remarkColumnA + 1).setValue(newValue);
          updatedCount++; // 更新があった場合にカウントを増やす
        }
        break;
      }
    }
  }
  
  // 更新された行数をログに出力
  Logger.log(updatedCount + "行が更新されました。");
}

function findColumnByName(headerRow, columnName) {
  for (var i = 0; i < headerRow.length; i++) {
    if (headerRow[i] === columnName) {
      return i;
    }
  }
  return -1;
}
