function countAndUpdateMatchingRows() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sourceSheet = ss.getSheetByName("撤去可能ビル確認（PS）");
  const targetSheet = ss.getSheetByName("週次報告集計");
  
  const sourceData = sourceSheet.getDataRange().getValues();
  const targetData = targetSheet.getDataRange().getValues();
  
  const headers = sourceData[5]; // 6行目がヘッダー行
  const colIndexes = {
    hColumn: headers.indexOf("H列の名前"),
    baColumn: headers.indexOf("BA列の名前"),
    caColumn: headers.indexOf("撤去自前申請判定"),
    bfColumn: headers.indexOf("BF列の名前") // 日付列
  };

  const monthCounts = {};
  const combinations = {};

  // ターゲットシートの日付行（71行目）を取得
  const dateRow = targetData[70];

  // 日付列のインデックスを特定（H列から開始）
  const dateColumns = {};
  for (let i = 7; i < dateRow.length; i++) {
    if (dateRow[i]) {
      const dateString = formatDate(new Date(dateRow[i]));
      dateColumns[dateString] = i;
    }
  }

  for (let i = 6; i < sourceData.length; i++) { // 7行目以降を処理
    const currentRow = sourceData[i];
    if (currentRow[colIndexes.caColumn] === "撤去自前申請") {
      const combination = `${currentRow[colIndexes.hColumn]},${currentRow[colIndexes.baColumn]}`;
      const dateString = formatDate(new Date(currentRow[colIndexes.bfColumn]));
      
      if (combination in combinations) {
        if (dateString in monthCounts) {
          monthCounts[dateString]++;
        } else {
          monthCounts[dateString] = 1;
        }
      } else {
        combinations[combination] = true;
      }
    }
  }

  // 結果を記入
  const targetRow = 73; // PSAX単月 撤去自前申請の行
  for (const [dateString, count] of Object.entries(monthCounts)) {
    if (dateString in dateColumns) {
      const col = dateColumns[dateString] + 1; // スプレッドシートの列は1から始まるため
      targetSheet.getRange(targetRow, col).setValue(count);
    }
  }
}

// 日付を 'YY/MM' 形式にフォーマットする関数
function formatDate(date) {
  const year = date.getFullYear().toString().slice(-2);
  const month = (date.getMonth() + 1).toString().padStart(2, '0');
  return `${year}/${month}`;
}
