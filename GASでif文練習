function writeResultsToSheet(targetData, results, targetSheet) {
  const patterns = [
    { suffix: '単月N検完了', key: 'completed' },
    { suffix: '単月N検予定', key: 'planned' },
    { suffix: '単月仮予定', key: 'tentative' },
    { suffix: '単月撤去自前申請', key: 'selfApplied' },
    { suffix: '単月撤去可能ビル', key: 'possibleRemoval' }
  ];

  Object.entries(results).forEach(([removalType, data]) => {
    patterns.forEach(pattern => {
      let rowPrefix;
      if (removalType === 'MURS撤去') {
        rowPrefix = 'MU-RS';
      } else {
        rowPrefix = removalType.split('撤去')[0];
      }
      const rowName = `${rowPrefix}${pattern.suffix}`;
      const targetRow = targetData.findIndex(row => row[4] === rowName) + 1;
      if (targetRow === 0) {
        console.log(`エラー: targetSheetに列名"${rowName}"の行が見つかりませんでした。`);
      } else {
        Object.entries(data.monthCounts[pattern.key]).forEach(([dateString, count]) => {
          const col = data.dateColumns[dateString] + 1;
          targetSheet.getRange(targetRow, col).setValue(count);
        });
        console.log(`${rowName}のカウント結果をtargetSheetに入力しました。`);
      }
    });
  });
}
