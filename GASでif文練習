function compareAndUpdateSheets() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sheetA = ss.getSheetByName('A');
  const sheetB = ss.getSheetByName('B');
  
  const dataA = sheetA.getDataRange().getValues();
  const dataB = sheetB.getDataRange().getValues();
  
  const headerA = dataA[0];
  const headerB = dataB[0];
  
  const idColumnA = headerA.indexOf('ID');
  const confirmColumnA = headerA.indexOf('確認');
  const checkColumnA = headerA.indexOf('チェック');
  
  const idColumnB = headerB.indexOf('ID');
  const confirmColumnB = headerB.indexOf('確認');
  
  const currentDate = new Date();
  const lastMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);
  const lastMonthTimestamp = Utilities.formatDate(lastMonth, 'Asia/Tokyo', '【yyyy/MM】');
  
  for (let i = 1; i < dataA.length; i++) {
    const idA = dataA[i][idColumnA];
    const confirmA = dataA[i][confirmColumnA];
    
    const rowB = dataB.findIndex(row => row[idColumnB] === idA);
    
    if (rowB !== -1) {
      const confirmB = dataB[rowB][confirmColumnB];
      const rangeBNote = sheetB.getRange(rowB + 1, confirmColumnB + 1);
      const noteB = rangeBNote.getNote();
      const rangeA = sheetA.getRange(i + 1, confirmColumnA + 1);
      const noteA = rangeA.getNote();
      
      let newNote = '';
      if (confirmB === '') {
        newNote = `${lastMonthTimestamp} 値なし\n${noteA}`;
        sheetA.getRange(i + 1, checkColumnA + 1).setValue('要確認');
      } else if (confirmA === confirmB) {
        if (noteB) {
          newNote = noteB;
        } else {
          newNote = noteA; // Bシートにメモがない場合、Aシートの既存のメモを保持
        }
      } else {
        const formattedConfirmB = Utilities.formatDate(new Date(confirmB), 'Asia/Tokyo', 'yyyy/MM/dd');
        if (noteB) {
          newNote = `${lastMonthTimestamp} ${formattedConfirmB}\n${noteB}`;
        } else {
          newNote = `${lastMonthTimestamp} ${formattedConfirmB}\n${noteA}`; // Bシートにメモがない場合、新しい行を追加してAシートの既存のメモを保持
        }
      }
      
      rangeA.setNote(newNote);
    }
  }
}
