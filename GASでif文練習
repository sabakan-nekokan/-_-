function compareAndUpdateSheets() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  const sheetA = ss.getSheetByName('A');
  const sheetB = ss.getSheetByName('B');
  
  const dataA = sheetA.getDataRange().getValues();
  const dataB = sheetB.getDataRange().getValues();
  
  const headerA = dataA[0];
  const headerB = dataB[0];
  
  const idColumnA = headerA.indexOf('ID');
  const confirmColumnA = headerA.indexOf('確認');
  const checkColumnA = headerA.indexOf('チェック');
  
  const idColumnB = headerB.indexOf('ID');
  const confirmColumnB = headerB.indexOf('確認');
  
  const currentDate = new Date();
  const lastMonth = Utilities.formatDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1), 'Asia/Tokyo', 'yyyy/MM');
  
  for (let i = 1; i < dataA.length; i++) {
    const idA = dataA[i][idColumnA];
    const confirmA = dataA[i][confirmColumnA];
    
    const rowB = dataB.findIndex(row => row[idColumnB] === idA);
    
    if (rowB !== -1) {
      const confirmB = dataB[rowB][confirmColumnB];
      const rangeA = sheetA.getRange(i + 1, confirmColumnA + 1);
      const rangeB = sheetB.getRange(rowB + 1, confirmColumnB + 1);
      const noteA = rangeA.getNote();
      const noteB = rangeB.getNote();
      
      if (!confirmB) {
        // Bシートの[確認]列のセルが空白の場合
        let newNote = `【${lastMonth}】 値なし\n${noteA}`;
        rangeA.setNote(newNote);
        sheetA.getRange(i + 1, checkColumnA + 1).setValue('要確認');
      } else if (confirmA === confirmB) {
        // AシートとBシートの[確認]列のセルの値が同じ場合
        rangeA.setNote(noteB);
      } else {
        // AシートとBシートの[確認]列のセルの値が違う場合
        let newNote = `【${lastMonth}】 ${confirmB}\n${noteA}`;
        rangeA.setNote(newNote);
      }
    }
  }
}
