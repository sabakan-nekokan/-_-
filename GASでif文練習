function name() {
  // ... (previous code remains the same)

  // 撤去予定月の処理とカウント（カテゴリーごとに初出のみカウント）
  psaxRemovalData.forEach((row, index) => {
    const hColumnValue = row[colIndexes.hColumn];
    const baColumnValue = row[colIndexes.baColumn] || '';
    const combinationKey = `${hColumnValue}_${baColumnValue}`;
    const bzColumnValue = row[colIndexes.bzColumn];
  
    let category;
    let rawDate;
  
    if (bzColumnValue === "N件完了") {
      category = 'completed';
      rawDate = row[colIndexes.bwColumn];
    } else if (bzColumnValue === "N件予定") {
      category = 'planned';
      rawDate = row[colIndexes.bwColumn];
    } else if (bzColumnValue === "仮予定") {
      category = 'tentative';
      rawDate = row[colIndexes.bwColumn];
    } else if (bzColumnValue === "撤去自前申請") {
      category = 'selfApplied';
      rawDate = row[colIndexes.bwColumn];
    } else if (bzColumnValue === "撤去可能ビル") {
      category = 'possibleRemoval';
      rawDate = row[colIndexes.acColumn];
    } else {
      return;
    }

    if (!uniqueCombinations[category].has(combinationKey)) {
      uniqueCombinations[category].add(combinationKey);

      const formattedDate = formatDate(rawDate);
      if (formattedDate in monthCounts[category]) {
        monthCounts[category][formattedDate]++;
      } else {
        console.log(`警告: ${formattedDate} は有効な月のリストに含まれていません。`);
      }
    }
  });

  // ... (rest of the code remains the same)
}

function formatDate(dateString) {
  if (typeof dateString !== 'string') {
    console.log(`警告: 無効な日付形式 "${dateString}" が見つかりました。`);
    return null;
  }

  const parts = dateString.split('/');
  
  if (parts.length === 3) {
    // YYYY/MM/DD or YYYY/M/D format
    const year = parts[0].slice(-2);
    const month = parts[1].padStart(2, '0');
    return `${year}/${month}`;
  } else if (parts.length === 2) {
    // YYYY/MM or YY/MM format
    const year = parts[0].slice(-2);
    const month = parts[1].padStart(2, '0');
    return `${year}/${month}`;
  } else {
    console.log(`警告: 無効な日付形式 "${dateString}" が見つかりました。`);
    return null;
  }
}
