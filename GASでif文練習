function filterSpreadsheetData() {
  // ソーススプレッドシートのID
  const SOURCE_SPREADSHEET_ID = '【ソーススプレッドシートのIDを入れてください】';
  // ソースシート名
  const SOURCE_SHEET_NAME = '【ソースシートの名前を入れてください】';
  // 貼り付け先のシート名
  const DESTINATION_SHEET_NAME = '【貼り付け先シートの名前を入れてください】';
  
  // ソーススプレッドシートを取得
  const sourceSpreadsheet = SpreadsheetApp.openById(SOURCE_SPREADSHEET_ID);
  const sourceSheet = sourceSpreadsheet.getSheetByName(SOURCE_SHEET_NAME);
  
  // 貼り付け先のスプレッドシートを取得（このスクリプトが紐付いているスプレッドシート）
  const destinationSpreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const destinationSheet = destinationSpreadsheet.getSheetByName(DESTINATION_SHEET_NAME);
  
  // データ範囲を取得（ヘッダー行を含む）
  const dataRange = sourceSheet.getDataRange();
  const values = dataRange.getValues();
  
  // ヘッダー行を取得し、必要な列のインデックスを特定
  const headers = values[0];
  const idIndex = headers.indexOf('ID');
  const numberIndex = headers.indexOf('番号');
  const codeIndex = headers.indexOf('コード');
  const rackNameIndex = headers.indexOf('ラック名');
  const woIdIndex = headers.indexOf('WOID');
  const subProjectIndex = headers.indexOf('案件サブ');
  
  // フィルター条件に合うデータを抽出
  const filteredData = values.slice(1).filter(row => {
    return row[subProjectIndex].toString().includes('3G');
  }).map(row => {
    return [
      row[idIndex],
      row[numberIndex],
      row[codeIndex],
      row[rackNameIndex],
      row[woIdIndex]
    ];
  });
  
  // 貼り付け先シートの既存データをクリア
  // ヘッダー行（1行目）より下のデータのみをクリア
  const lastRow = destinationSheet.getLastRow();
  if (lastRow > 1) {  // データが存在する場合のみクリア
    destinationSheet.getRange(2, 1, lastRow - 1, destinationSheet.getLastColumn()).clearContent();
  }
  
  // フィルターされたデータを出力
  if (filteredData.length > 0) {
    destinationSheet.getRange(2, 1, filteredData.length, 5).setValues(filteredData);
  }
  
  // 列幅を自動調整
  destinationSheet.autoResizeColumns(1, 5);
}
