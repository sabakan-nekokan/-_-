function transferAndUpdateData() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheetA = ss.getSheetByName("Aシート");
  var sheetB = ss.getSheetByName("Bシート");
  
  var dataA = sheetA.getDataRange().getValues();
  var dataB = sheetB.getDataRange().getValues();
  
  var headerA = dataA[0];
  var headerB = dataB[0];
  
  var idIndexA = headerA.indexOf("ID");
  var remarkIndexA = headerA.indexOf("備考");
  var idIndexB = headerB.indexOf("ID");
  var remarkIndexB = headerB.indexOf("備考");
  
  var updatedRows = 0;
  var addedRows = 0;
  
  var newRows = [];

  for (var i = 1; i < dataA.length; i++) {
    var rowA = dataA[i];
    var idA = rowA[idIndexA];
    var remarkA = rowA[remarkIndexA];
    
    // 備考欄に値がある場合のみ処理（空白文字は値なしとみなす）
    if (remarkA && remarkA.trim() !== "") {
      var foundIndex = -1;
      for (var j = 1; j < dataB.length; j++) {
        var remarkB = dataB[j][remarkIndexB];
        if (dataB[j][idIndexB] === idA && remarkB && remarkB.trim() !== "") {
          foundIndex = j;
          break;
        }
      }
      
      var timestamp = Utilities.formatDate(new Date(), "GMT+9", "yyyy/MM");
      var newRemark = timestamp + " " + remarkA;
      
      if (foundIndex !== -1) {
        // 既存の行を更新
        for (var k = 0; k < headerA.length; k++) {
          if (k !== remarkIndexB) {
            sheetB.getRange(foundIndex + 1, k + 1).setValue(rowA[k]);
          }
        }
        var existingRemark = dataB[foundIndex][remarkIndexB];
        sheetB.getRange(foundIndex + 1, remarkIndexB + 1).setValue(newRemark + "\n" + existingRemark);
        updatedRows++;
      } else {
        // 新しい行を追加用のデータを準備
        var newRow = new Array(headerB.length);
        for (var k = 0; k < headerA.length; k++) {
          if (k === remarkIndexB) {
            newRow[k] = newRemark;
          } else {
            newRow[k] = rowA[k];
          }
        }
        newRows.push(newRow);
        addedRows++;
      }
    }
  }
  
  // 新しい行をBシートの最後に追加
  if (newRows.length > 0) {
    var lastRow = sheetB.getLastRow();
    sheetB.getRange(lastRow + 1, 1, newRows.length, headerB.length).setValues(newRows);
  }
  
  Logger.log("更新された行数: " + updatedRows);
  Logger.log("追加された行数: " + addedRows);
}
