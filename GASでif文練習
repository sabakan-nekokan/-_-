function dailyLogUpdate() {
  // スプレッドシートを取得
  const ss = SpreadspreadApp.getActiveSpreadsheet();
  const masterSheet = ss.getSheetByName('Master'); // データ取得元シート
  const logSheet = ss.getSheetByName('ADM_N発回線');  // ログ記録用シート
  
  // 今日の日付を取得
  const today = new Date();
  const dateString = Utilities.formatDate(today, 'Asia/Tokyo', 'yyyy/MM/dd');
  
  // マスターシートからBXとBY列を取得
  const rangeBX = masterSheet.getRange('BX:BX').getValues();
  const rangeBY = masterSheet.getRange('BY:BY').getValues();
  
  // 両方の列から有効なデータを抽出
  let combinedValues = [];
  for (let i = 0; i < rangeBX.length; i++) {
    // BX列とBY列の値を組み合わせて1行にする
    combinedValues.push([rangeBX[i][0], rangeBY[i][0]]);
  }
  
  // 空行を除外（両方の列が空の場合のみ除外）
  combinedValues = combinedValues.filter(row => row[0] !== '' || row[1] !== '');
  
  // 前日のデータを取得（存在する場合）
  const lastCol = logSheet.getLastColumn();
  const lastDateCell = logSheet.getRange(1, lastCol);
  const yesterdayValues = lastCol > 1 ? 
    logSheet.getRange(2, lastCol - 1, combinedValues.length, 2).getValues() : null;
  
  // 新しい列に日付とデータを追加
  const newCol = lastCol + 1;
  logSheet.getRange(1, newCol).setValue(dateString);  // 日付を記入
  logSheet.getRange(2, newCol, combinedValues.length, 2).setValues(combinedValues);  // データを記入
  
  // 前日データと比較して差分があれば通知
  if (yesterdayValues) {
    let differences = [];
    
    for (let i = 0; i < combinedValues.length; i++) {
      const bxDiff = combinedValues[i][0] !== yesterdayValues[i][0];
      const byDiff = combinedValues[i][1] !== yesterdayValues[i][1];
      
      if (bxDiff || byDiff) {
        differences.push({
          row: i + 2,
          bx: {
            yesterday: yesterdayValues[i][0],
            today: combinedValues[i][0],
            changed: bxDiff
          },
          by: {
            yesterday: yesterdayValues[i][1],
            today: combinedValues[i][1],
            changed: byDiff
          }
        });
      }
    }
    
    // 差分があれば通知
    if (differences.length > 0) {
      let message = "前日との差分:\n";
      differences.forEach(diff => {
        message += `${diff.row}行目:\n`;
        if (diff.bx.changed) {
          message += `  BX列: ${diff.bx.yesterday} → ${diff.bx.today}\n`;
        }
        if (diff.by.changed) {
          message += `  BY列: ${diff.by.yesterday} → ${diff.by.today}\n`;
        }
      });
      
      // Google Chatに通知
      const webhookUrl = "https://chat.googleapis.com/v1/spaces/AAAAWiNFgzw/messages?key=AIzaSyDdl0hCZlE6yvSjMm-WEfRq3CPzqKqqsHI&token=Md4sZXHc5KO8-XFC95YRZZhT9wtoRCXFb46zSY";
      
      const payload = {
        "text": message
      };
      
      UrlFetchApp.fetch(webhookUrl, {
        method: 'post',
        contentType: 'application/json',
        payload: JSON.stringify(payload)
      });
    }
  }
}
